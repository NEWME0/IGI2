//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: IGI2_FNT.bt
//   Authors: Rotari Artiom
//   Version: 1.0
//   Purpose: 
//  Category: Game
// File Mask: ILFF
//  ID BYTEs: 
//   History: 
//------------------------------------------------


#include "COMMON/ALIGN.bt";
#include "COMMON/RGBA_8888.bt";


typedef wchar_t WCHAR;


struct
{
    CHAR   fsign[4];  //ILFF
    UINT32 fsize;
    UINT32 falign;
    UINT32 fskip;
    CHAR   dsign[4];  //FONT


    struct
    {
        ALIGN(4);

        CHAR   csign[4];  //FNTH
        UINT32 csize;
        UINT32 calign;
        UINT32 cskip;

        UINT32 _0;
        UINT32 char_count;
        UINT32 _1;
        UINT32 _2;
        UINT32 _3;
        UINT32 _4;
    } fnth;


    struct
    {
        ALIGN(4);

        CHAR   csign[4];  //ANMF
        UINT32 csize;
        UINT32 calign;
        UINT32 cskip;

        struct
        {
            UINT32 _0;
            FLOAT  ul_u;
            FLOAT  ul_v;
            FLOAT  lr_u;
            FLOAT  lr_v;
            UINT16 _1;
            UINT16 px_w;
            UINT16 px_h;
            UINT16 _4;
            UINT32 _5;
            UINT32 _6;
            UINT32 _7;
        } char_mapping[fnth.char_count] <optimize=true>;
    } anmf;


    struct
    {
        ALIGN(4);

        CHAR   csign[4];  //TRN2
        UINT32 csize;
        UINT32 calign;
        UINT32  cskip;

        WSTRING  charset[fnth.char_count];
    } trn2;


    struct
    {
        ALIGN(4);

        CHAR   csign[4];  //TEXH
        UINT32 csize;
        UINT32 calign;
        UINT32 cskip;

        UINT16 _0;
        UINT32 _1;
        UINT32 _2;
        UINT32 _3;
        UINT16 _img_width;
        UINT16 _img_heigth;
        UINT16 img_width;
        UINT16 img_heigth;
        UINT16 pixel_width;
    } texh;


    struct
    {
        ALIGN(4);

        CHAR   csign[4];  //BODY
        UINT32 csize;
        UINT32 calign;
        UINT32 cskip;

        RGBA_8888 pixel[texh.img_width * 1 * texh.img_heigth] <optimize=true>;
    } body;
} fnt;


Assert(FEof());

//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: IGI2_SPR.bt
//   Authors: Rotari Artiom
//   Version: 1.0
//   Purpose: 
//  Category: Game
// File Mask: LOOP
//  ID BYTEs: 
//   History: 
//------------------------------------------------


struct
{
    CHAR   magic[4];
    UINT32 version;
    UINT32 _02;
    UINT32 _03;
    UINT32 _04;
    UINT32 _05;
    UINT32 _06;
    UINT32 _07;
    UINT32 _08;
    UINT32 _09;
    UINT32 _10;
    UINT32 _11;
    UINT32 _12;

    switch(version)
    {
        case 7:
        {
            struct
            {
                UINT32 _1;
                UINT32 _2;

                UINT16 _3;
                UINT16 _4;
                UINT16 _5;
                UINT16 _6;

                UINT32 _7;
                UINT32 _8;
                UINT32 _9;
                UINT32 _10;
                UINT32 _11;
                UINT32 _12;
            } sprhead[_08];

            local UINT32 i;

            for(i = 0; i < _08; i++)
            {
                struct
                {
                    BYTE data[sprhead[i]._3 * sprhead[i]._5 * 4];
                } sprbody;
            }
        } break;
        case 9:
        {
            struct
            {
                UINT32 _1;
                UINT32 _2;

                UINT16 _3;
                UINT16 _4;
                UINT16 _5;
                UINT16 _6;

                UINT32 _7;
                UINT32 _8;
                UINT32 _9;
                UINT32 _10;
            } sprhead[_08];

            local UINT32 i;

            for(i = 0; i < _08; i++)
            {
                struct
                {
                    BYTE data[sprhead[i]._4 * sprhead[i]._5 * 4];
                } sprbody;
            }
        } break;
    }
} loop_01;


struct
{
    CHAR   magic[4];
    UINT32 _1;
    UINT32 _2;
    UINT32 _3;
    UINT32 _4;
    UINT32 _5;

    struct
    {
        UINT32 _1;
        UINT32 _2;
        UINT32 _3;
        UINT32 _4;
    } sprwhat[loop_01._08];
} loop_02;


Assert(FEof());

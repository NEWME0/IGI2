//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: IGI2_IFF.bt
//   Authors: Rotari Artiom
//   Version: 1.0
//   Purpose: 
//  Category: Game
// File Mask: ILFF
//  ID BYTEs: 
//   History: 
//------------------------------------------------


#include "common/ALIGN.bt";
#include "common/CSTRING.bt";
#include "common/FSTRING.bt";
#include "common/VECTOR_FLOAT_3.bt";


struct {
    LittleEndian();

    CHAR  Signature[4];
    DWORD Size;
    DWORD Align;
    DWORD Next;

    struct {
        CHAR  Signature[4];

        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            DWORD Size;
            DWORD Align;
            DWORD Next;

            BYTE    Reserved_0[8];
            DWORD   _0;
            DWORD   _1;
            DWORD   _2;
            DWORD   BoneCount;
            BYTE    Reserved_1[4];
            DWORD   _3;
            DWORD   _4;
            DWORD   _5;
            DWORD   _6;
            BYTE    Reserved_2[8];
            CSTRING AnimName;
        } DHNA;

        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            DWORD Size;
            DWORD Align;
            DWORD Next;

            BYTE BoneChildCount[DHNA.BoneCount];

            ALIGN(4);

            VECTOR_FLOAT_3 BonePosition[DHNA.BoneCount];
        } REIH;

        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            DWORD Size;
            DWORD Align;
            DWORD Next;

            FLOAT _0[Size / 4];
        } TNVE;

        if(!FEof())
        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            DWORD Size;
            DWORD Align;
            DWORD Next;

            struct
            {
                FSTRING  ModelName(16);
                FLOAT    _1;
                FLOAT    _2;
                FLOAT    _3;
                FLOAT    _4;
                FLOAT    _5;
                FLOAT    _6;
                FLOAT    _7;
                FLOAT    _8;
                FLOAT    _9;
                FLOAT    _10;
                FLOAT    _11;
                FLOAT    _12;
                CHAR     Reserved_0[4];
                DWORD    _14;
                DWORD    _15;
                DWORD    _16;
            } Attachment[Size / 80];
        } ATTA;
    } MINA;
} ILFF;
//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: IGI2_IFF.bt
//   Authors: Rotari Artiom
//   Version: 1.0
//   Purpose: 
//  Category: Game
// File Mask: ILFF
//  ID BYTEs: 
//   History: 
//------------------------------------------------


#include "COMMON/ALIGN.bt";
#include "COMMON/CSTRING.bt";
#include "COMMON/FSTRING.bt";
#include "COMMON/FLOAT_3.bt";


struct
{
    LittleEndian();

    CHAR  Signature[4];
    UINT32 Size;
    UINT32 Align;
    UINT32 Next;

    struct
    {
        CHAR  Signature[4];

        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            UINT32 Size;
            UINT32 Align;
            UINT32 Next;

            BYTE    Reserved_0[8];
            UINT32   _0;
            UINT32   _1;
            UINT32   _2;
            UINT32   BoneCount;
            BYTE    Reserved_1[4];
            UINT32   _3;
            UINT32   _4;
            UINT32   _5;
            UINT32   _6;
            BYTE    Reserved_2[8];
            CSTRING AnimName;
        } DHNA;

        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            UINT32 Size;
            UINT32 Align;
            UINT32 Next;

            BYTE BoneChildCount[DHNA.BoneCount];

            ALIGN(4);

            FLOAT_3 BonePosition[DHNA.BoneCount];
        } REIH;

        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            UINT32 Size;
            UINT32 Align;
            UINT32 Next;

            FLOAT _0[Size / 4];
        } TNVE;

        if(!FEof())
        struct
        {
            ALIGN(4);

            CHAR  Signature[4];
            UINT32 Size;
            UINT32 Align;
            UINT32 Next;

            struct
            {
                FSTRING  ModelName(16);
                FLOAT    _1;
                FLOAT    _2;
                FLOAT    _3;
                FLOAT    _4;
                FLOAT    _5;
                FLOAT    _6;
                FLOAT    _7;
                FLOAT    _8;
                FLOAT    _9;
                FLOAT    _10;
                FLOAT    _11;
                FLOAT    _12;
                CHAR     Reserved_0[4];
                UINT32    _14;
                UINT32    _15;
                UINT32    _16;
            } Attachment[Size / 80];
        } ATTA;
    } MINA;
} ILFF;